{"mappings":"gBAYAA,EAVA,SAAoBC,GAChB,IAKMC,EALMD,EAASE,QAAO,SAACC,EAAKC,GAG9B,OAAOD,EAFOE,WAAWD,EAAQE,OAChBC,SAASH,EAAQI,S,GAEnC,GACoBC,QAAQ,GAC/B,MAAO,mBAA4BC,OAATT,EAAS,O,MC+BvCU,EAtCA,SAAuBX,GACnB,IAAMY,EAAUC,SAASC,iBAAiB,mBACpCC,EAAiBF,SAASG,cAAc,eAC9CC,EAAAlB,EACYC,GACZe,EAAeG,UAAYD,EAE3BL,EAAQO,SAAQ,SAAAC,GACZA,EAAOC,iBAAiB,SAAS,WAC7B,IAAMC,EAASF,EAAOG,QAAQD,OACxBE,EAAOJ,EAAOK,QAAQ,oBACtBC,EAAUF,EAAKR,cAAc,UAC/BW,EAAepB,SAASmB,EAAQE,aAEpC,GAAe,cAAXN,EACAK,GAAgB,OACb,GAAe,cAAXL,EACP,GAAIK,EAAe,EACfA,GAAgB,MACb,CACH,IAAME,EAAUC,QAAQ,4CACxBC,QAAQC,IAAIH,E,CAGpBH,EAAAE,YAAAD,EAC6BM,WAC7B,IAAAC,EAAAV,EAAAW,GAEuBnC,EAASoC,MAAK,SAAAhC,G,OAAWA,EAAQiC,MAAQH,C,IACjD1B,SAAWmB,EAE1BV,EAAAlB,EACQC,GACRe,EAAeG,UAAYD,C,QC7BjCqB,EAAezB,SAASG,cAAc,gBACrBH,SAASG,cAAc,gBAG9C,WACI,IACI,IAAIhB,EAAWuC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GAChE,GAAI1C,EAAS2C,OAAS,EAAG,CACrB,IAAMC,EAAsB5C,ECDvB6C,KAAI,SAAArB,GACT,IAAMsB,EAAStB,EAAMuB,OAA+B,KAAtBvB,EAAKuB,MAAMC,OAAiBxB,EAAKuB,MAAQ,mEACvE,MAAO,mCACSrC,OAD0Bc,EAAKa,IAAI,kCACnB3B,OAAhBoC,EAAO,WAEbpC,OAFsBc,EAAKyB,MAAM,+FAGvBvC,OADVc,EAAKyB,MAAM,yCACUvC,OAAXc,EAAKlB,MAAM,kU,IAQhC4C,KAAK,IDZJZ,EAAapB,UAAY0B,EACzBjC,EAAcX,E,MAKfsC,EAAapB,UCUZ,4C,CDNN,MAAOiC,GAEL,OADApB,QAAQC,IAAImB,GACLA,C,EAGfC,E","sources":["src/helpers/totalPrice.js","src/helpers/counter.js","src/shopingCart.js","src/helpers/markup.js"],"sourcesContent":["\n\nfunction totalPrice(products) {\n    let total = products.reduce((acc, product) => {\n        const price = parseFloat(product.price);\n        const quantity = parseInt(product.quantity);\n        return acc + (price * quantity);\n    }, 0);\n    const fixPrice = total.toFixed(2);\n    return `<p>Total price: ${fixPrice}</p>`\n}\n\nexport default totalPrice;\n","import totalPrice from './totalPrice';\n\nfunction counterBasket(products) {\n    const buttons = document.querySelectorAll(\"#counter button\");\n    const totalPriceInfo = document.querySelector(\"#totalPrice\");\n    /*------------------перший рендер товарів------------------*/\n    let total = totalPrice(products); \n    totalPriceInfo.innerHTML = total;\n\n    buttons.forEach(button => {\n        button.addEventListener(\"click\", () => {\n            const action = button.dataset.action;\n            const item = button.closest(\".itemDrugsBasket\");\n            const counter = item.querySelector(\"#value\");\n            let counterValue = parseInt(counter.textContent);\n\n            if (action === \"increment\") {\n                counterValue += 1;\n            } else if (action === \"decrement\") {\n                if (counterValue > 0) {\n                    counterValue -= 1;\n                } else {\n                    const message = confirm(\"Error. Click cannot be a negative number\");\n                    console.log(message);\n                }\n            }\n            /*-------------змінює значення спану на сторінці------------*/\n            counter.textContent = counterValue.toString();\n            /*-------------змінює значення quantity в об'єкті products----*/\n            const itemId = item.id;\n            const updatedProduct = products.find(product => product._id === itemId);\n            updatedProduct.quantity = counterValue;\n            \n            /*------------викликаємо тотал з новим quantity------*/\n            total = totalPrice(products); \n            totalPriceInfo.innerHTML = total;\n        });\n    });\n}\n\nexport default counterBasket;\n","import { MarkupBasket, BasketEmpty } from \"./helpers/markup\";\n//import totalPrice from \"./helpers/totalPrice\";\nimport counterBasket from \"./helpers/counter\";\n\n\n\nconst productsList = document.querySelector(\"#drugsBasket\");\nconst totalPriceInfo = document.querySelector(\"#totalPrice\");\n\n\nfunction getProductsBasket() {\n    try {\n        let products = JSON.parse(localStorage.getItem('cartItems')) || [];\n        if (products.length > 0) {\n            const markup = MarkupBasket(products);\n            productsList.innerHTML = markup;\n            counterBasket(products)\n            // const totPrice = totalPrice(products);\n            // totalPriceInfo.innerHTML = totPrice;\n\n        } else {\n           productsList.innerHTML =  BasketEmpty()\n        }\n        \n\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}\ngetProductsBasket()\n\n"," export function MarkupMain(data) {\n        return data.map(item => {\n            const imgSrc = (item.image && item.image.trim() !== '') ? item.image : 'https://cdn1.iconfinder.com/data/icons/pikku-ui/16/image-512.png';\n            return `<li class=\"itemDrugs\" id=\"${item._id}\">\n                <img src=\"${imgSrc}\" alt=\"${item.title}\" loading=\"lazy\" />\n                <h3>${item.title}</h3>\n                <p>${item.price}</p>\n                <button class=\"addToCart\" type=\"button\">Add to Cart</button>\n            </li>`;\n        }).join('');\n}\n\nexport function MarkupBasket(data) {\n     return data.map(item => {\n            const imgSrc = (item.image && item.image.trim() !== '') ? item.image : 'https://cdn1.iconfinder.com/data/icons/pikku-ui/16/image-512.png';\n            return `<li class=\"itemDrugsBasket\" id=\"${item._id}\">\n                <img src=\"${imgSrc}\" alt=\"${item.title}\" loading=\"lazy\" width=\"300\"/>\n                <div class=\"infoDrug\"\n                <h3>${item.title}</h3>\n                <p id=\"price\">${item.price}</p>\n                    <div id=\"counter\">\n                    <button type=\"button\" data-action=\"decrement\">-1</button>\n                      <span id=\"value\">1</span>\n                    <button type=\"button\" data-action=\"increment\">+1</button>\n                 </div>\n                </div>\n            </li>`;\n        }).join('');\n}\n\nexport function BasketEmpty() {\n    return `<p>Basket is empty!Please add products</p>`\n}\n"],"names":["$32832fdecbc488b2$export$2e2bcd8739ae039","products","fixPrice","reduce","acc","product","parseFloat","price","parseInt","quantity","toFixed","concat","$7d2f04cefe95ecdf$export$2e2bcd8739ae039","buttons","document","querySelectorAll","totalPriceInfo","querySelector","total","innerHTML","forEach","button","addEventListener","action","dataset","item","closest","counter","counterValue","textContent","message","confirm","console","log","toString","itemId","id","find","_id","$0a2a098f7abbc870$var$productsList","JSON","parse","localStorage","getItem","length","markup","map","imgSrc","image","trim","title","join","error","$0a2a098f7abbc870$var$getProductsBasket"],"version":3,"file":"shopingCart.3180e885.js.map"}